Script padrão JS {
    <!DOCTYPE html> 
    <html lang="pt-br">
    <head> 
    <title> </title>
    <meta charset="utf-8"/>
    </head>
    <body> 
    <h1> TITULO PRINCIPAL</h1>
    <h2> TITULO SECUNDÁRIO </h2>
    <script language = "javascript" src="_javascript/funcoes.js"> </script>  
  </body>
    </html>
}

// - Comentário para uma única linha para CSS e JS
/* */ - Comentário para mais de uma linha CSS 
<!-- --> - para comentários em html
+ - sinal de junção / concatenação

Operadores/Conversores string/number:

Number.parseInt(n) - Converter String para numero inteiros
Number.parseFloat(n) - Converter String para numeros com numeros reais
Number(n) - Converter String para numeros inteiros ou reais automaticamente
String(n) - Converter números para String
n.toString() - Converter números para String. O que eu quero converter.toString(). Gira ao contrário.
s.lenght - é um Atributo, mostra quantos caracteres a string tem
s.toUpperCase() - tudo para letra 'MAISCÚLAS'
s.toLowerCase() - tudo para letra  'minusculas'

Formatando Strings:
var s = 'JavaScript'
'Eu estou aprendendo s' - não faz interpolação
'Eu estou aprendendo' + s - usa concatenação
`Eu estou aprendendo ${s}` - usa template string


Mensagem de alerta: {
    alert('Olá,Mundo!');
    window.alert('Mensagem'); - Alerta de mensagem
    window.confirm('Está gostando de JS'); - uma pergunta sem espaço para resposta
    window.prompt('Qual é o seu nome?'); caixa de pergunta com espaço para resposta, apenas para Strings
}


Escrever no documento {
    document.write("Mensagem"); - Escrever algo na tela
    document.write("Olá, hoje é dia " + Date()); - Com data e hora
}
    

Evento ao passar o mouse por cima do objeto ON {
  onclick="nomedafunção()"/> = ao clicar no objeto dispara o evento.
  onmousemove="nomedafunção()"/>  = ao passar o mouse em cima do objeto dispara o evento.
  onmouseout="nomedafunção()"/> = evento de quando tirar o mouse de cima do objeto, dispara o evento
  onmouseover = />sempre que passar o mouse na função dispara o evento
  oniput="" />- usada para disparar o evento de uma variavel.
  mouseenter - quando o mouse entrar no DIV
  variavel.addEventListener ('script da função', var da função) - add.EventListener substitui a chamada do script em HTML.

}

Textos  {
    !quebrada - o NÃO antes da palavra é uma exclamação !.
    window.document.write(innerText) - puxar exatamente o texto sem html
    window.document.write(innerHtml) - Puxa o texto com HTML
}

Identificadores {
        Podem começar com letra, $, ou _
        Não pode começar com números
        Épossível usar letras ou múmeros
        É possível usar acentos e símbolos 
        Não podem conter espaços 
        Não podem ser palavras reservadas
        Letras Maiúsculas e Minúsculas fazem diferenças
}

Tipos de Dados {
    number - Infinty e NaN
    String
    Boolean
    null
    undefined
    object - Array
    function
}

Aritméticos {
    5 + 2 = 7
    5 - 2 = 3
    5 * 2 = 10
    5 / 2 = 2.5
    5 % 2 =  1  É Resto da divisão
    5 ** 2 = 25  cinco ao quadrado 
    n = n +5  / n+=5
    n = n -5  / n-=5
    n = n *5  / n*=5
    n = n /5  / n/=5
    n = n **5  / n**=5
    n = n %5  / n%=5

  Incremento:
    x = x +1  / x++
    x = x-1 / x-- 


  Ordem de Precedências:
    ()
    **
    * / % 
    + - 

  Relacionais:
   5 > 2 true (Simbolo Maior)
   7 < 4 False (Simbolo Menor)
   8 >= 8 True (Simbolo Maior ou igual )
   9 <= 7 False (Simbolo Menor ou igual)
   5 == 5 True (Simbolo igual) 
   4 != 4 False (Simbolo de não igual, diferente)
  
   Identidade:
    5 == 5 True
    5 == '5' True (String)
    5 === '5' False (identico, 5 identico a 5)
    5 === 5 True 

  Lógicos:
    ! Negação
    && Conjunção ( E lógico, uma coisa e outra )
    || Disjunção (  OU lógico, uma coisa ou outra)
  
  Precedências:
    () ** /
    > < >=
    !
    &&
    ||
  
  Ternário:
    var média = 5 
    média > 7? 'APROVADO':'REPROVADO'
    'Reprovado'
}

Seleções  {
    Por Marca - getElementByTagName() - Chama o documento pela Tag, pode selecionar mais de um objeto do mesmo tipo, selecionando em ordem crescendo [0], [1], [2]...
    Por ID -    getElementById() - Chama o documento pelo seu elemento ID
    Por Nome - getElementsByName() - Por nome tendo que usar o colchetes se for mais de uma.
    Por Classes - getElementsByClassName() - Por Classes
    Por Seletor - querySelector() / querySelectorAll() - por Seletor como no CSS. div#nomedaVAR para ID ou div.nomedaVAR para Classes.
    
    Toda Classe é representada por um pontinho(.) / Toda ID é representada por uma hashtag (#)
}

                 Árvore DOM
                  Window
      location    document    history
                    html
              head        body
            meta/title    h1/p/p/div
                            strong


Funções {
  function ação(parametros) {

  }
}